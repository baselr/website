---
title: "BaselR"
subtitle: Data science events in Basel 
listing:
  contents: posts
  sort: "date desc"
  type: grid
  grid-columns: 3
  image-height: 250px
  page-size: 100
  categories: true
page-layout: full
title-block-banner: true 
image: banner_baselR.png
format:
  html:
    toc: true
    toc-location: left
    code-fold: true
    code-tools: true
    code-summary: "Show the code"
    df-print: paged
    font-family: ["Unbuntu", sans-serif]
    mainfont: "Ubuntu"
    title-block-banner: banner_baselR.png
---

# About

**BaselR**'s purpose is to organize **Data Science events in Basel.** Historically mainly focus in R, as landscape is evolving we are open to other languages to see how each others communicate and are complementary. Also format would be now a mixte of elevators speeches (max 5 min presentation) follow up by an Apero to catch up on topics and networking.

For now, information are available on [meetup](https://www.meetup.com/baselr/){target="_blank"}. [![meetup](meetup.png){target="_blank" width="37"}](https://www.meetup.com/baselr/)

# [Events](events.qmd)

```{r write-redirects}
#| echo: false
# list names of post folders
posts <- list.dirs(
  path = here::here("posts"),
  full.names = FALSE,
  recursive = FALSE
)

# extract the slugs
slugs <- gsub("^.*_", "", posts)
# lines to insert to a netlify _redirect file
post_redirects <- paste0("/", slugs, " ", "/posts/", posts)
# function to extract post categories from index.qmd files
get_post_categories <- function(post) {
  file <- here::here("posts", post) |> fs::path("index.qmd")
  if(!fs::file_exists(file)) {
    return(character(0))
  }
  file |>
    readLines() |> 
    stringr::str_subset("^categories:") |>
    stringr::str_extract("\\[.*\\]") |> 
    stringr::str_remove_all("[\\[\\]]") |>
    stringr::str_split(", ") |> 
    unlist()
}
# extract the categories
categories <- purrr::map(posts, get_post_categories) |> 
  unlist() |> 
  unique()
# extract categories in nice form
keys <- categories |> 
  stringr::str_to_lower() |>
  stringr::str_replace_all(" ", "-")
# extract categories in ugly form
values <- categories |>
  stringr::str_replace_all(" ", "%20")
# category redirects
category_redirects <- paste0("/category/", keys, " ", "/#category=", values)
# write the _redirect file
writeLines(c(post_redirects, category_redirects), here::here("_site", "_redirects"))
```
